{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\niels\\\\Desktop\\\\code\\\\reactGame\\\\game\\\\src\\\\containers\\\\Mainbody.js\";\nimport React from \"react\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getText = () => {\n      if (this.state.time === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Welcome to this experiment. While trying to learn to code I decided to put some my new-found knowledge into a project. The following project will probably have many shortcomings compared to projects created with things like twine, but never the less it functions more as a learning experience than anything else.\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }), \"Please be adviced that the following page contains items of adult nature and by clicking Progress you express an indirect degree of understanding of this.\"));\n      }\n    };\n\n    this.state = {\n      time: 0,\n      rules: {},\n      pen: false,\n      title: \"Start\",\n      body: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-light text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      className: \"col-6 offset-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.text), React.createElement(\"button\", {\n      className: \"btn btn-block btn-lg btn-light\",\n      onClick: this.Progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Progress\")));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:\\Users\\niels\\Desktop\\code\\reactGame\\game\\src\\containers\\Mainbody.js"],"names":["React","Main","Component","constructor","props","getText","state","time","rules","pen","title","body","render","text","Progress"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,OAXkB,GAWR,MAAK;AACX,UAAG,KAAKC,KAAL,CAAWC,IAAX,KAAoB,CAAvB,EAAyB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uUAA2T;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3T,+JADG,CAAP;AAGH;AACJ,KAjBiB;;AAEd,SAAKD,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC,CADE;AAEPC,MAAAA,KAAK,EAAC,EAFC;AAGPC,MAAAA,GAAG,EAAC,KAHG;AAIPC,MAAAA,KAAK,EAAE,OAJA;AAKPC,MAAAA,IAAI,EAAE;AALC,KAAX;AAOH;;AAUDC,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC,KAAKN,KAAL,CAAWI,KAAnD,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKJ,KAAL,CAAWO,IAAtC,CADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,gCAAlB;AAAmD,MAAA,OAAO,EAAE,KAAKC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFJ,CADJ;AASH;;AA/B6B;;AAkClC,eAAeb,IAAf","sourcesContent":["import React from \"react\";\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            time:0,\r\n            rules:{},\r\n            pen:false,\r\n            title: \"Start\",\r\n            body: null\r\n        }\r\n    }\r\n\r\n    getText = () =>{\r\n        if(this.state.time === 0){\r\n            return <div> \r\n                <p>Welcome to this experiment. While trying to learn to code I decided to put some my new-found knowledge into a project. The following project will probably have many shortcomings compared to projects created with things like twine, but never the less it functions more as a learning experience than anything else.<br/>Please be adviced that the following page contains items of adult nature and by clicking Progress you express an indirect degree of understanding of this.</p>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"bg-dark\">\r\n                <h1 className=\"text-light text-center\">{this.state.title}</h1>\r\n                <div className=\"col-6 offset-3\">\r\n                    <p className=\"text-light\">{this.state.text}</p>\r\n                    <button className=\"btn btn-block btn-lg btn-light\" onClick={this.Progress}>Progress</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}