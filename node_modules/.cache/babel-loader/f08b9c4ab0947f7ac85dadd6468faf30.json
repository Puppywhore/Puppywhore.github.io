{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\niels\\\\Desktop\\\\code\\\\reactGame\\\\game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\niels\\\\Desktop\\\\code\\\\reactGame\\\\game\\\\src\\\\functions\\\\getText.js\";\nimport React from \"react\";\nimport Text1 from \"./text/1FirstRealText\";\nexport const GetText = props => {\n  let rules = props.rules,\n      time = props.time,\n      bool = props.bool,\n      action = props.action;\n\n  switch (time) {\n    case 0:\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Welcome to this experiment. While trying to learn to code I decided to put some my new-found knowledge into a project. The following project will probably have many shortcomings compared to projects created with things like twine, but never the less it functions more as a learning experience than anything else.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }), \"Please be adviced that the following page contains items of adult nature and by clicking Progress you express an indirect degree of understanding of this.\"));\n\n    case 1:\n      let item = rules.start;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \" Through out the game you will see words that are bold and can be clicked. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \" \", React.createElement(\"span\", {\n        className: \"Hand font-weight-bolder text-danger text-center\",\n        onClick: () => action({\n          rules: _objectSpread({}, rules, {\n            start: \"CHANGE!\"\n          })\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, item), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \" Some words might change permanently. While others can be toggled back and forth. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"Hand font-weight-bolder text-danger text-center\",\n        onClick: () => action({\n          bool: !bool\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, bool ? \"On\" : React.createElement(\"span\", {\n        className: \"animated 1 fadeIn slow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Off\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \"You can change as many things on a page as you like, however every time you press progress, the time of the story will move forward.\"));\n\n    case 2:\n    default:\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"That is all for now folks. Again this is a learning experience. If you have something you wanna share then feel free to leave a comment wherever you found this game.\"));\n  }\n};","map":{"version":3,"sources":["C:\\Users\\niels\\Desktop\\code\\reactGame\\game\\src\\functions\\getText.js"],"names":["React","Text1","GetText","props","rules","time","bool","action","item","start"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAU;AAAA,MACxBC,KADwB,GACKD,KADL,CACxBC,KADwB;AAAA,MACjBC,IADiB,GACKF,KADL,CACjBE,IADiB;AAAA,MACXC,IADW,GACKH,KADL,CACXG,IADW;AAAA,MACLC,MADK,GACKJ,KADL,CACLI,MADK;;AAE7B,UAAOF,IAAP;AACI,SAAK,CAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qUAAkV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlV,+JADG,CAAP;;AAGJ,SAAK,CAAL;AACQ,UAAIG,IAAI,GAAGJ,KAAK,CAACK,KAAjB;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAAqG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArG,OAA2G;AAAM,QAAA,SAAS,EAAC,iDAAhB;AAAkE,QAAA,OAAO,EAAE,MAAIF,MAAM,CAAC;AAACH,UAAAA,KAAK,oBAAKA,KAAL;AAAWK,YAAAA,KAAK,EAAC;AAAjB;AAAN,SAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4HD,IAA5H,CAA3G,OAAoP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApP,wFAA2U;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3U,EAAgV;AAAM,QAAA,SAAS,EAAC,iDAAhB;AAAkE,QAAA,OAAO,EAAE,MAAID,MAAM,CAAC;AAAED,UAAAA,IAAI,EAAC,CAACA;AAAR,SAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuGA,IAAI,GAAG,IAAH,GAAU;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAArH,CAAhV,EAAggB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhgB,yIADJ,CADJ;;AAIJ,SAAK,CAAL;AAEA;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iLADG,CAAP;AAdR;AAkBH,CApBM","sourcesContent":["import React from \"react\";\r\nimport Text1 from \"./text/1FirstRealText\"\r\nexport const GetText = (props) =>{\r\n    let {rules, time, bool, action} = props\r\n    switch(time){\r\n        case 0: \r\n            return <div> \r\n                <p className=\"text-light\">Welcome to this experiment. While trying to learn to code I decided to put some my new-found knowledge into a project. The following project will probably have many shortcomings compared to projects created with things like twine, but never the less it functions more as a learning experience than anything else.<br/>Please be adviced that the following page contains items of adult nature and by clicking Progress you express an indirect degree of understanding of this.</p>\r\n            </div>\r\n        case 1:\r\n                let item = rules.start;\r\n            return( \r\n                <div>\r\n                    <p className=\"text-light\"> Through out the game you will see words that are bold and can be clicked. <br/> <span className=\"Hand font-weight-bolder text-danger text-center\" onClick={()=>action({rules:{...rules,start:\"CHANGE!\"}})}>{item}</span> <br/> Some words might change permanently. While others can be toggled back and forth. <br/><span className=\"Hand font-weight-bolder text-danger text-center\" onClick={()=>action({ bool:!bool})}>{bool ? \"On\" : <span className=\"animated 1 fadeIn slow\">Off</span>}</span><br/>You can change as many things on a page as you like, however every time you press progress, the time of the story will move forward.</p>\r\n                </div>)\r\n        case 2:\r\n            \r\n        default:\r\n            return <div> \r\n                <p className=\"text-light\">That is all for now folks. Again this is a learning experience. If you have something you wanna share then feel free to leave a comment wherever you found this game.</p>\r\n            </div>\r\n    }   \r\n}"]},"metadata":{},"sourceType":"module"}