{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\niels\\\\Desktop\\\\code\\\\reactGame\\\\game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\niels\\\\Desktop\\\\code\\\\reactGame\\\\game\\\\src\\\\containers\\\\Mainbody.js\";\nimport React from \"react\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Progress = e => {\n      e.preventDefault();\n      this.setState(_objectSpread({}, this.state, {\n        time: this.state.time + 1\n      }));\n    };\n\n    this.getText = () => {\n      switch (this.state.time) {\n        case 0:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"Hand font-weight-bolder text-danger\",\n            onClick: () => console.log(\"Welcome clicked\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, \"Welcome\"), \" to this experiment. While trying to learn to code I decided to put some my new-found knowledge into a project. The following project will probably have many shortcomings compared to projects created with things like twine, but never the less it functions more as a learning experience than anything else.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }), \"Please be adviced that the following page contains items of adult nature and by clicking Progress you express an indirect degree of understanding of this.\"));\n\n        case 1:\n          let item = this.state.rules.start;\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \" Through out the game you will see words that are bold and can be clicked. \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }), \" \", React.createElement(\"span\", {\n            className: \"Hand font-weight-bolder text-danger text-center\",\n            onClick: () => this.setState(_objectSpread({}, this.state, {\n              rules: _objectSpread({}, this.state.rules, {\n                start: \"CHANGE!\"\n              })\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, item), \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }), \" Some words might change permanently. While others can be toggled back and forth. \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"Hand font-weight-bolder text-danger text-center\",\n            onClick: () => this.setState(_objectSpread({}, this.state, {\n              bool: !this.state.bool\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, this.state.bool ? \"On\" : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \"\\\"Off\\\"\")), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          })));\n\n        default:\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"text-light\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"That is all for now folks. Again this is a learning experience. If you have something you wanna share then feel free to leave a comment wherever you found this game.\"));\n      }\n    };\n\n    this.state = {\n      time: 0,\n      rules: {\n        start: \"Like this\"\n      },\n      pen: false,\n      title: \"Start\",\n      body: null,\n      bool: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-light text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      className: \"col-6 offset-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.getText(), React.createElement(\"button\", {\n      className: \"btn btn-block btn-lg btn-light\",\n      onClick: this.Progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Progress\")));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:\\Users\\niels\\Desktop\\code\\reactGame\\game\\src\\containers\\Mainbody.js"],"names":["React","Main","Component","constructor","props","Progress","e","preventDefault","setState","state","time","getText","console","log","item","rules","start","bool","pen","title","body","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            time:0,\r\n            rules:{start:\"Like this\"},\r\n            pen:false,\r\n            title: \"Start\",\r\n            body: null,\r\n            bool: true\r\n        }\r\n    }\r\n\r\n    Progress = (e) =>{\r\n        e.preventDefault();\r\n        this.setState({...this.state, time: this.state.time + 1})\r\n    }\r\n\r\n    getText = () =>{\r\n        switch(this.state.time){\r\n            case 0: \r\n                return <div> \r\n                    <p className=\"text-light\"><span className=\"Hand font-weight-bolder text-danger\" onClick={()=>console.log(\"Welcome clicked\")}>Welcome</span> to this experiment. While trying to learn to code I decided to put some my new-found knowledge into a project. The following project will probably have many shortcomings compared to projects created with things like twine, but never the less it functions more as a learning experience than anything else.<br/>Please be adviced that the following page contains items of adult nature and by clicking Progress you express an indirect degree of understanding of this.</p>\r\n                </div>\r\n            case 1:\r\n                    let item = this.state.rules.start;\r\n                return( \r\n                    <div>\r\n                        <p className=\"text-light\"> Through out the game you will see words that are bold and can be clicked. <br/> <span className=\"Hand font-weight-bolder text-danger text-center\" onClick={()=>this.setState({...this.state, rules:{...this.state.rules,start:\"CHANGE!\"}})}>{item}</span> <br/> Some words might change permanently. While others can be toggled back and forth. <br/><span className=\"Hand font-weight-bolder text-danger text-center\" onClick={()=>this.setState({...this.state, bool:!this.state.bool})}>{this.state.bool ? \"On\" : <span>\"Off\"</span>}</span><br/></p>\r\n                    </div>)\r\n            default:\r\n                return <div> \r\n                    <p className=\"text-light\">That is all for now folks. Again this is a learning experience. If you have something you wanna share then feel free to leave a comment wherever you found this game.</p>\r\n                </div>\r\n        }   \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"bg-dark\">\r\n                <h1 className=\"text-light text-center\">{this.state.title}</h1>\r\n                <div className=\"col-6 offset-3\">\r\n                    {this.getText()}\r\n                    <button className=\"btn btn-block btn-lg btn-light\" onClick={this.Progress}>Progress</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}